
package com.ipeirotis.mturk.requester;

import java.util.Calendar;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AWSMechanicalTurkRequesterPortType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AWSMechanicalTurkRequesterPortType {


    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param hit
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "CreateHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "CreateHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.CreateHIT")
    @ResponseWrapper(localName = "CreateHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.CreateHITResponse")
    public void createHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<CreateHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "HIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<HIT>> hit);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param registerHITTypeResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "RegisterHITType", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "RegisterHITType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.RegisterHITType")
    @ResponseWrapper(localName = "RegisterHITTypeResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.RegisterHITTypeResponse")
    public void registerHITType(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<RegisterHITTypeRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "RegisterHITTypeResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<RegisterHITTypeResult>> registerHITTypeResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param setHITTypeNotificationResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "SetHITTypeNotification", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "SetHITTypeNotification", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SetHITTypeNotification")
    @ResponseWrapper(localName = "SetHITTypeNotificationResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SetHITTypeNotificationResponse")
    public void setHITTypeNotification(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<SetHITTypeNotificationRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "SetHITTypeNotificationResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<SetHITTypeNotificationResult>> setHITTypeNotificationResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param sendTestEventNotificationResult
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "SendTestEventNotification", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "SendTestEventNotification", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SendTestEventNotification")
    @ResponseWrapper(localName = "SendTestEventNotificationResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SendTestEventNotificationResponse")
    public void sendTestEventNotification(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<SendTestEventNotificationRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "SendTestEventNotificationResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<SendTestEventNotificationResult>> sendTestEventNotificationResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     * @param disposeHITResult
     */
    @WebMethod(operationName = "DisposeHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "DisposeHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.DisposeHIT")
    @ResponseWrapper(localName = "DisposeHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.DisposeHITResponse")
    public void disposeHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<DisposeHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "DisposeHITResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<DisposeHITResult>> disposeHITResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param disableHITResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "DisableHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "DisableHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.DisableHIT")
    @ResponseWrapper(localName = "DisableHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.DisableHITResponse")
    public void disableHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<DisableHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "DisableHITResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<DisableHITResult>> disableHITResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param hit
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetHIT")
    @ResponseWrapper(localName = "GetHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetHITResponse")
    public void getHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "HIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<HIT>> hit);

    /**
     * 
     * @param timestamp
     * @param getAssignmentResult
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetAssignment", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetAssignment", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetAssignment")
    @ResponseWrapper(localName = "GetAssignmentResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetAssignmentResponse")
    public void getAssignment(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetAssignmentRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetAssignmentResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetAssignmentResult>> getAssignmentResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param getReviewResultsForHITResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetReviewResultsForHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetReviewResultsForHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetReviewResultsForHIT")
    @ResponseWrapper(localName = "GetReviewResultsForHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetReviewResultsForHITResponse")
    public void getReviewResultsForHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetReviewResultsForHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetReviewResultsForHITResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetReviewResultsForHITResult>> getReviewResultsForHITResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param getReviewableHITsResult
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetReviewableHITs", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetReviewableHITs", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetReviewableHITs")
    @ResponseWrapper(localName = "GetReviewableHITsResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetReviewableHITsResponse")
    public void getReviewableHITs(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetReviewableHITsRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetReviewableHITsResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetReviewableHITsResult>> getReviewableHITsResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param getHITsForQualificationTypeResult
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetHITsForQualificationType", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetHITsForQualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetHITsForQualificationType")
    @ResponseWrapper(localName = "GetHITsForQualificationTypeResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetHITsForQualificationTypeResponse")
    public void getHITsForQualificationType(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetHITsForQualificationTypeRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetHITsForQualificationTypeResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetHITsForQualificationTypeResult>> getHITsForQualificationTypeResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     * @param getQualificationsForQualificationTypeResult
     */
    @WebMethod(operationName = "GetQualificationsForQualificationType", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetQualificationsForQualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetQualificationsForQualificationType")
    @ResponseWrapper(localName = "GetQualificationsForQualificationTypeResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetQualificationsForQualificationTypeResponse")
    public void getQualificationsForQualificationType(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetQualificationsForQualificationTypeRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetQualificationsForQualificationTypeResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetQualificationsForQualificationTypeResult>> getQualificationsForQualificationTypeResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param setHITAsReviewingResult
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "SetHITAsReviewing", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "SetHITAsReviewing", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SetHITAsReviewing")
    @ResponseWrapper(localName = "SetHITAsReviewingResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SetHITAsReviewingResponse")
    public void setHITAsReviewing(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<SetHITAsReviewingRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "SetHITAsReviewingResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<SetHITAsReviewingResult>> setHITAsReviewingResult);

    /**
     * 
     * @param timestamp
     * @param extendHITResult
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "ExtendHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "ExtendHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ExtendHIT")
    @ResponseWrapper(localName = "ExtendHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ExtendHITResponse")
    public void extendHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<ExtendHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "ExtendHITResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<ExtendHITResult>> extendHITResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param forceExpireHITResult
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "ForceExpireHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "ForceExpireHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ForceExpireHIT")
    @ResponseWrapper(localName = "ForceExpireHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ForceExpireHITResponse")
    public void forceExpireHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<ForceExpireHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "ForceExpireHITResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<ForceExpireHITResult>> forceExpireHITResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param approveAssignmentResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "ApproveAssignment", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "ApproveAssignment", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ApproveAssignment")
    @ResponseWrapper(localName = "ApproveAssignmentResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ApproveAssignmentResponse")
    public void approveAssignment(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<ApproveAssignmentRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "ApproveAssignmentResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<ApproveAssignmentResult>> approveAssignmentResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param rejectAssignmentResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "RejectAssignment", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "RejectAssignment", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.RejectAssignment")
    @ResponseWrapper(localName = "RejectAssignmentResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.RejectAssignmentResponse")
    public void rejectAssignment(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<RejectAssignmentRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "RejectAssignmentResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<RejectAssignmentResult>> rejectAssignmentResult);

    /**
     * 
     * @param timestamp
     * @param approveRejectedAssignmentResult
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "ApproveRejectedAssignment", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "ApproveRejectedAssignment", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ApproveRejectedAssignment")
    @ResponseWrapper(localName = "ApproveRejectedAssignmentResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ApproveRejectedAssignmentResponse")
    public void approveRejectedAssignment(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<ApproveRejectedAssignmentRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "ApproveRejectedAssignmentResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<ApproveRejectedAssignmentResult>> approveRejectedAssignmentResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param getAssignmentsForHITResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetAssignmentsForHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetAssignmentsForHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetAssignmentsForHIT")
    @ResponseWrapper(localName = "GetAssignmentsForHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetAssignmentsForHITResponse")
    public void getAssignmentsForHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetAssignmentsForHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetAssignmentsForHITResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetAssignmentsForHITResult>> getAssignmentsForHITResult);

    /**
     * 
     * @param timestamp
     * @param getFileUploadURLResult
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetFileUploadURL", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetFileUploadURL", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetFileUploadURL")
    @ResponseWrapper(localName = "GetFileUploadURLResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetFileUploadURLResponse")
    public void getFileUploadURL(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetFileUploadURLRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetFileUploadURLResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetFileUploadURLResult>> getFileUploadURLResult);

    /**
     * 
     * @param timestamp
     * @param searchHITsResult
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "SearchHITs", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "SearchHITs", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SearchHITs")
    @ResponseWrapper(localName = "SearchHITsResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SearchHITsResponse")
    public void searchHITs(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<SearchHITsRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "SearchHITsResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<SearchHITsResult>> searchHITsResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param grantBonusResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GrantBonus", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GrantBonus", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GrantBonus")
    @ResponseWrapper(localName = "GrantBonusResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GrantBonusResponse")
    public void grantBonus(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GrantBonusRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GrantBonusResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GrantBonusResult>> grantBonusResult);

    /**
     * 
     * @param timestamp
     * @param getBonusPaymentsResult
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetBonusPayments", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetBonusPayments", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetBonusPayments")
    @ResponseWrapper(localName = "GetBonusPaymentsResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetBonusPaymentsResponse")
    public void getBonusPayments(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetBonusPaymentsRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetBonusPaymentsResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetBonusPaymentsResult>> getBonusPaymentsResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param changeHITTypeOfHITResult
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "ChangeHITTypeOfHIT", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "ChangeHITTypeOfHIT", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ChangeHITTypeOfHIT")
    @ResponseWrapper(localName = "ChangeHITTypeOfHITResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.ChangeHITTypeOfHITResponse")
    public void changeHITTypeOfHIT(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<ChangeHITTypeOfHITRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "ChangeHITTypeOfHITResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<ChangeHITTypeOfHITResult>> changeHITTypeOfHITResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param qualificationType
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "CreateQualificationType", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "CreateQualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.CreateQualificationType")
    @ResponseWrapper(localName = "CreateQualificationTypeResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.CreateQualificationTypeResponse")
    public void createQualificationType(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<CreateQualificationTypeRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "QualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<QualificationType>> qualificationType);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param getQualificationRequestsResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetQualificationRequests", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetQualificationRequests", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetQualificationRequests")
    @ResponseWrapper(localName = "GetQualificationRequestsResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetQualificationRequestsResponse")
    public void getQualificationRequests(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetQualificationRequestsRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetQualificationRequestsResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetQualificationRequestsResult>> getQualificationRequestsResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param rejectQualificationRequestResult
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "RejectQualificationRequest", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "RejectQualificationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.RejectQualificationRequest")
    @ResponseWrapper(localName = "RejectQualificationRequestResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.RejectQualificationRequestResponse")
    public void rejectQualificationRequest(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<RejectQualificationRequestRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "RejectQualificationRequestResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<RejectQualificationRequestResult>> rejectQualificationRequestResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param qualificationType
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetQualificationType", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetQualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetQualificationType")
    @ResponseWrapper(localName = "GetQualificationTypeResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetQualificationTypeResponse")
    public void getQualificationType(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetQualificationTypeRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "QualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<QualificationType>> qualificationType);

    /**
     * 
     * @param timestamp
     * @param grantQualificationResult
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GrantQualification", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GrantQualification", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GrantQualification")
    @ResponseWrapper(localName = "GrantQualificationResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GrantQualificationResponse")
    public void grantQualification(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GrantQualificationRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GrantQualificationResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GrantQualificationResult>> grantQualificationResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     * @param assignQualificationResult
     */
    @WebMethod(operationName = "AssignQualification", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "AssignQualification", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.AssignQualification")
    @ResponseWrapper(localName = "AssignQualificationResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.AssignQualificationResponse")
    public void assignQualification(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<AssignQualificationRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "AssignQualificationResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<AssignQualificationResult>> assignQualificationResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     * @param revokeQualificationResult
     */
    @WebMethod(operationName = "RevokeQualification", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "RevokeQualification", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.RevokeQualification")
    @ResponseWrapper(localName = "RevokeQualificationResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.RevokeQualificationResponse")
    public void revokeQualification(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<RevokeQualificationRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "RevokeQualificationResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<RevokeQualificationResult>> revokeQualificationResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     * @param searchQualificationTypesResult
     */
    @WebMethod(operationName = "SearchQualificationTypes", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "SearchQualificationTypes", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SearchQualificationTypes")
    @ResponseWrapper(localName = "SearchQualificationTypesResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.SearchQualificationTypesResponse")
    public void searchQualificationTypes(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<SearchQualificationTypesRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "SearchQualificationTypesResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<SearchQualificationTypesResult>> searchQualificationTypesResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param qualificationType
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "UpdateQualificationType", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "UpdateQualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.UpdateQualificationType")
    @ResponseWrapper(localName = "UpdateQualificationTypeResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.UpdateQualificationTypeResponse")
    public void updateQualificationType(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<UpdateQualificationTypeRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "QualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<QualificationType>> qualificationType);

    /**
     * 
     * @param timestamp
     * @param qualification
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetQualificationScore", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetQualificationScore", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetQualificationScore")
    @ResponseWrapper(localName = "GetQualificationScoreResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetQualificationScoreResponse")
    public void getQualificationScore(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetQualificationScoreRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "Qualification", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<Qualification>> qualification);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param updateQualificationScoreResult
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "UpdateQualificationScore", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "UpdateQualificationScore", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.UpdateQualificationScore")
    @ResponseWrapper(localName = "UpdateQualificationScoreResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.UpdateQualificationScoreResponse")
    public void updateQualificationScore(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<UpdateQualificationScoreRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "UpdateQualificationScoreResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<UpdateQualificationScoreResult>> updateQualificationScoreResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param getAccountBalanceResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetAccountBalance", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetAccountBalance", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetAccountBalance")
    @ResponseWrapper(localName = "GetAccountBalanceResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetAccountBalanceResponse")
    public void getAccountBalance(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetAccountBalanceRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetAccountBalanceResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetAccountBalanceResult>> getAccountBalanceResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param getStatisticResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetRequesterStatistic", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetRequesterStatistic", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetRequesterStatistic")
    @ResponseWrapper(localName = "GetRequesterStatisticResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetRequesterStatisticResponse")
    public void getRequesterStatistic(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetRequesterStatisticRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetStatisticResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetStatisticResult>> getStatisticResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param getStatisticResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetRequesterWorkerStatistic", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetRequesterWorkerStatistic", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetRequesterWorkerStatistic")
    @ResponseWrapper(localName = "GetRequesterWorkerStatisticResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetRequesterWorkerStatisticResponse")
    public void getRequesterWorkerStatistic(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetRequesterWorkerStatisticRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetStatisticResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetStatisticResult>> getStatisticResult);

    /**
     * 
     * @param timestamp
     * @param disposeQualificationTypeResult
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "DisposeQualificationType", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "DisposeQualificationType", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.DisposeQualificationType")
    @ResponseWrapper(localName = "DisposeQualificationTypeResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.DisposeQualificationTypeResponse")
    public void disposeQualificationType(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<DisposeQualificationTypeRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "DisposeQualificationTypeResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<DisposeQualificationTypeResult>> disposeQualificationTypeResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param notifyWorkersResult
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "NotifyWorkers", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "NotifyWorkers", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.NotifyWorkers")
    @ResponseWrapper(localName = "NotifyWorkersResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.NotifyWorkersResponse")
    public void notifyWorkers(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<NotifyWorkersRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "NotifyWorkersResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<NotifyWorkersResult>> notifyWorkersResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param getBlockedWorkersResult
     * @param request
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "GetBlockedWorkers", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "GetBlockedWorkers", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetBlockedWorkers")
    @ResponseWrapper(localName = "GetBlockedWorkersResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.GetBlockedWorkersResponse")
    public void getBlockedWorkers(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<GetBlockedWorkersRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "GetBlockedWorkersResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<GetBlockedWorkersResult>> getBlockedWorkersResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param blockWorkerResult
     * @param awsAccessKeyId
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "BlockWorker", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "BlockWorker", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.BlockWorker")
    @ResponseWrapper(localName = "BlockWorkerResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.BlockWorkerResponse")
    public void blockWorker(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<BlockWorkerRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "BlockWorkerResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<BlockWorkerResult>> blockWorkerResult);

    /**
     * 
     * @param timestamp
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param unblockWorkerResult
     * @param credential
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "UnblockWorker", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "UnblockWorker", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.UnblockWorker")
    @ResponseWrapper(localName = "UnblockWorkerResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.UnblockWorkerResponse")
    public void unblockWorker(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Credential", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String credential,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<UnblockWorkerRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "UnblockWorkerResult", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<UnblockWorkerResult>> unblockWorkerResult);

    /**
     * 
     * @param timestamp
     * @param information
     * @param operationRequest
     * @param request
     * @param awsAccessKeyId
     * @param validate
     * @param signature
     */
    @WebMethod(operationName = "Help", action = "http://soap.amazon.com")
    @RequestWrapper(localName = "Help", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.Help")
    @ResponseWrapper(localName = "HelpResponse", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", className = "com.ipeirotis.mturk.requester.HelpResponse")
    public void help(
        @WebParam(name = "AWSAccessKeyId", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String awsAccessKeyId,
        @WebParam(name = "Timestamp", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        Calendar timestamp,
        @WebParam(name = "Signature", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String signature,
        @WebParam(name = "Validate", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        String validate,
        @WebParam(name = "Request", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15")
        List<HelpRequest> request,
        @WebParam(name = "OperationRequest", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<OperationRequest> operationRequest,
        @WebParam(name = "Information", targetNamespace = "http://requester.mturk.amazonaws.com/doc/2013-11-15", mode = WebParam.Mode.OUT)
        Holder<List<Information>> information);

}
